{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Applications/www/Gadnes_Technology/TTU_PORTAL_GO/frontend/src/pages/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  const submit = async e => {\n    e.preventDefault();\n    await axios.post('login', {\n      email,\n      password\n    });\n    setRedirect(true);\n  };\n\n  const responseGoogle = async response => {\n    const data = JSON.stringify(response); // await axios.get('/oauth/auth/google');\n\n    console.log(JSON.stringify(response.email));\n  };\n\n  signInWithGoogle = async () => {\n    try {\n      const result = await Google.logInAsync({\n        iosClientId: IOS_CLIENT_ID,\n        androidClientId: ANDROID_CLIENT_ID,\n        scopes: [\"profile\", \"email\"]\n      });\n\n      if (result.type === \"success\") {\n        console.log(\"LoginScreen.js.js 21 | \", result.user.givenName, result.user.familyName, result.user.email, result.user.photoUrl);\n        this.props.navigation.navigate(\"MyDrawer\", {\n          username: result.user.givenName,\n          lastname: result.user.familyName,\n          email: result.user.email,\n          photoUrl: result.user.photoUrl\n        }); //after Google login redirect to MyDrawer\n\n        return result.accessToken;\n      } else {\n        return {\n          cancelled: true\n        };\n      }\n    } catch (e) {\n      console.log('LoginScreen.js.js 30 | Error with login', e);\n      return {\n        error: true\n      };\n    }\n  };\n\n  const handleLogin = async googleData => {\n    const res = await fetch(\"/oauth/auth/google/callback\", {\n      method: \"GET\",\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    console.log(data); // store returned user somehow\n  };\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"form-signin\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3 fw-normal\",\n        children: \"Please sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        placeholder: \"Email\",\n        required: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        placeholder: \"Password\",\n        required: true,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-100 btn btn-lg btn-primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: \"523793815073-33qjc07d518jpoh5hcrv4ar12aa6atdc.apps.googleusercontent.com\",\n        buttonText: \"Login\",\n        onSuccess: responseGoogle,\n        onFailure: responseGoogle,\n        cookiePolicy: 'single_host_origin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this), \",\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"QQ1Kot1GNnZtw2fbuFp5WQMdMbo=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Applications/www/Gadnes_Technology/TTU_PORTAL_GO/frontend/src/pages/Login.tsx"],"names":["axios","React","useState","Redirect","GoogleLogin","Login","email","setEmail","password","setPassword","redirect","setRedirect","submit","e","preventDefault","post","responseGoogle","response","data","JSON","stringify","console","log","signInWithGoogle","result","Google","logInAsync","iosClientId","IOS_CLIENT_ID","androidClientId","ANDROID_CLIENT_ID","scopes","type","user","givenName","familyName","photoUrl","props","navigation","navigate","username","lastname","accessToken","cancelled","error","handleLogin","googleData","res","fetch","method","body","token","tokenId","headers","json","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {SyntheticEvent, useState} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    const submit = async (e: SyntheticEvent) => {\n        e.preventDefault();\n\n        await axios.post('login', {\n            email,\n            password\n        });\n\n        setRedirect(true);\n    }\n    const responseGoogle = async (response:any) => {\n      const data = JSON.stringify(response)\n\n     // await axios.get('/oauth/auth/google');\n      console.log(JSON.stringify(response.email));\n    }\n  signInWithGoogle = async () => {\n    try {\n      const result = await Google.logInAsync({\n        iosClientId: IOS_CLIENT_ID,\n        androidClientId: ANDROID_CLIENT_ID,\n        scopes: [\"profile\", \"email\"]\n      });\n\n      if (result.type === \"success\") {\n        console.log(\"LoginScreen.js.js 21 | \", result.user.givenName, result.user.familyName, result.user.email, result.user.photoUrl);\n        this.props.navigation.navigate(\"MyDrawer\", {\n          username: result.user.givenName,\n          lastname: result.user.familyName,\n          email: result.user.email,\n          photoUrl: result.user.photoUrl\n        }); //after Google login redirect to MyDrawer\n        return result.accessToken;\n      } else {\n        return { cancelled: true };\n      }\n    } catch (e) {\n      console.log('LoginScreen.js.js 30 | Error with login', e);\n      return { error: true };\n    }\n  };\n\n  const handleLogin =  async (googleData: { tokenId: any; }) => {\n    const res =  await fetch(\"/oauth/auth/google/callback\", {\n      method: \"GET\",\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    const data =   await res.json()\n    console.log(data)\n    // store returned user somehow\n  }\n\n\n    if (redirect) {\n        return <Redirect to={'/'}/>;\n    }\n\n    return (\n        <main className=\"form-signin\">\n            <form onSubmit={submit}>\n                <h1 className=\"h3 mb-3 fw-normal\">Please sign in</h1>\n\n                <input type=\"email\" className=\"form-control\" placeholder=\"Email\" required\n                       onChange={e => setEmail(e.target.value)}\n                />\n\n                <input type=\"password\" className=\"form-control\" placeholder=\"Password\" required\n                       onChange={e => setPassword(e.target.value)}\n                />\n\n                <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Submit</button>\n              <GoogleLogin\n                clientId=\"523793815073-33qjc07d518jpoh5hcrv4ar12aa6atdc.apps.googleusercontent.com\"\n                buttonText=\"Login\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={'single_host_origin'}\n              />,\n\n            </form>\n        </main>\n    )\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}